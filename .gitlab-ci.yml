stages:
  - build
  - test
  - deploy

variables:
  IMAGE_TAG: $DOCKER_USERNAME/todo-app:latest
  POSTGRES_DB: todo_test_db
  POSTGRES_USER: todo_user
  POSTGRES_PASSWORD: secretpassword
  DB_HOST: postgres
  DB_PORT: 5432
  DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$DB_HOST:$DB_PORT/$POSTGRES_DB"

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
    - name: postgres:15
      alias: postgres
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
    - rm -f /root/.docker/config.json
  only:
    - main

test:
  stage: test
  image: python:3.13
  services:
    - name: postgres:15
      alias: postgres
  before_script:
    # Installer les dépendances système pour psycopg2
    - apt-get update && apt-get install -y libpq-dev gcc postgresql-client
    - pip install --upgrade pip
    - pip install -r requirements.txt
    # Attendre que PostgreSQL soit prêt
    - until pg_isready -h $DB_HOST -p $DB_PORT; do echo "Waiting for Postgres..."; sleep 1; done
    # Créer la base si elle n'existe pas
    - psql -h $DB_HOST -U $POSTGRES_USER -tc "SELECT 1 FROM pg_database WHERE datname = '$POSTGRES_DB'" | grep -q 1 || psql -h $DB_HOST -U $POSTGRES_USER -c "CREATE DATABASE $POSTGRES_DB"
    # Appliquer les migrations
    - python manage.py migrate
  script:
    - python manage.py test
  only:
    - main

deploy:
  stage: deploy
  script:
    - echo "Deployment successful"
  only:
    - main
